# -*- coding: utf-8 -*-
"""Tugas_4_SEIR.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZMYLUyLcoSgV23r9qZCp57LpJlQv95C9

**MEMBUAT MODEL SEIR**
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# Parameter model
beta = 0.3        # laju infeksi
gamma= 0.1        # laju pemulihan (1/gamma = 10 hari)
N = 1000          # total populasi
sigma = 0.01      # laju kematian

# Kondisi awal
S0 = N-50  # Semua individu rentan kecuali 1 terpapar dan 1 terinfeksi
E0 = 32    # Individu yang terpapar pada awalnya
I0 =  18   # Individu terinfeksi pada
R0 = 0     # Tidak ada yang sembuh pada awalnya

# WAKTU SIMULASI (DALAM HARI)
t = np.linspace(0, 500, 500) # simulasi selama 160 hari

# model SIR
def sir_model(y, t, N, beta, gamma, sigma):
  S, E, I, R = y
  dSdt = - (beta * S * I / N)
  dEdt = (beta * S * I / N) - sigma * E
  dIdt = sigma * E - gamma * I
  dRdt = gamma * I
  return [dSdt, dEdt, dIdt, dRdt]

# Menyelesaikan sistem persamaan diferensial
y0 = [S0, E0, I0, R0]
solution = odeint(sir_model, y0, t, args=(N, beta, gamma, sigma))
S, E, I, R = solution.T

# Plot hasil simulasi
plt.figure(figsize=(10, 6))
plt.plot(t, S, label='Susceptible', color ='blue')
plt.plot(t, E, label='Exposed', color = 'orange')
plt.plot(t, I, label='Infected', color = 'red')
plt.plot(t, R, label='Recovered', color = 'green')
plt.xlabel('Hari')
plt.ylabel('Jumlah Individu')
plt.title('Simulasi Model SEIR', color = 'purple')
plt.legend()
plt.grid()
plt.show()

"""**MEMBUAT MODEL SEIR DENGAN TAMBAHAN ANGKA KELAHIRAN DAN KEMATIAN**

**TITIK EKULIBRIUM BEBAS PENYAKIT**
"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# Parameter
beta1 = 1.5
beta2 = 0.8
mu = 2.5
delta = 0.6
alpha = 0.1
gamma = 0.03
N = 50

# Model SEIR dengan kelahiran dan kematian
def SEIR(y, t, beta1, beta2, mu, delta, alpha, gamma, N):
    S, E, I, R = y
    dsdt = beta1 * N - (beta2 * S**2 * I) / (N**2) - mu * S
    dedt = (beta2 * S**2 * I) / (N**2) - delta * E - mu * E
    didt = delta * E - gamma * I - mu * I - alpha * I
    drdt = gamma * I - mu * R
    return [dsdt, dedt, didt, drdt]

# Kondisi awal
S0 = 20    # Individu rentan
E0 = 20    # Individu terpapar
I0 = 10    # Individu terinfeksi
R0 = 0    # Individu sembuh

y0 = [S0, E0, I0, R0]

# Waktu simulasi (dalam hari)
t = np.linspace(0, 100, 100)

# Menjalankan simulasi
sol = odeint(SEIR, y0, t, args=(beta1, beta2, mu, delta, alpha, gamma, N))
S, E, I, R = sol.T

# Plot hasil simulasi
plt.figure(figsize=(10, 6))
plt.plot(t, S, label='Susceptible', color='blue')
plt.plot(t, E, label='Exposed', color='orange')
plt.plot(t, I, label='Infected', color='red')
plt.plot(t, R, label='Recovered', color='green')
plt.xlabel('Hari')
plt.ylabel('Jumlah Individu')
plt.title('Simulasi Model SEIR Campak')
plt.legend()
plt.grid()
plt.show()

"""**TITIK EKUILIBRIUM ENDEMIK**"""

import numpy as np
import matplotlib.pyplot as plt
from scipy.integrate import odeint

# Parameter
beta1 = 0.05
beta2 = 0.8
mu = 0.1
delta = 0.2
alpha = 0.05
gamma = 0.03
N = 100

# Model SEIR dengan kelahiran dan kematian
def SEIR(y, t, beta1, beta2, mu, delta, alpha, gamma, N):
    S, E, I, R = y
    dsdt = beta1 * N - (beta2 * (S**2) * I) / (N**2) - mu * S
    dedt = (beta2 * (S**2) * I) / (N**2) - delta * E - mu * E
    didt = delta * E - gamma * I - mu * I - alpha * I
    drdt = gamma * I - mu * R
    return [dsdt, dedt, didt, drdt]

# Kondisi awal
S0 = 70  # Individu rentan
E0 = 20   # Individu terpapar
I0 = 10   # Individu terinfeksi
R0 = 0    # Individu sembuh

y0 = [S0, E0, I0, R0]

# Waktu simulasi (dalam hari)
t = np.linspace(0, 250, 250)

# Menjalankan simulasi
sol = odeint(SEIR, y0, t, args=(beta1, beta2, mu, delta, alpha, gamma, N))
S, E, I, R = sol.T

# Plot hasil simulasi
plt.figure(figsize=(10, 6))
plt.plot(t, S, label='Susceptible', color='blue')
plt.plot(t, E, label='Exposed', color='orange')
plt.plot(t, I, label='Infected', color='red')
plt.plot(t, R, label='Recovered', color='green')
plt.xlabel('Hari')
plt.ylabel('Jumlah Individu')
plt.title('Simulasi Model SEIR Campak')
plt.legend()
plt.grid()
plt.show()